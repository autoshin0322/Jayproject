Folder architecture beschrieben in architecure.txt





How to

1.Cut the whole .eaf (trimmed)
Because the video of Va.Si.Li-Lab too long for the model testing, the .eaf file for the video have to cut
takt will be 10 sec. but it can be adjusted.
for trimming use "python 1.create_clip_interval.py"
Line 58-60 have to adjust, each starttime, endtime and intervel second.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

2. Envisionhgdetector 실행
Use Jupyter Notebook or somethings what you want to do
Run envisionhgdetector.

Informations can be founded in follwed links

https://pypi.org/project/envisionhgdetector/
https://envisionbox.org/embedded_UsingEnvisionHGdetector_package.html
https://github.com/WimPouw/envisionhgdetector?tab=readme-ov-file


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3.밑에 두개 같은 작업임. 코드가 살짝 다름. 나중에 확인필요
Label to Gesture or NoGesture
For binary classification have to label be changed into Gesture or NoGesture.
If there are any label(inkl. Error), it will be turn into Gesture. Otherwise NoGesture
Use "python labeltoGesture"

hange.eaf to .csv
after Gesture, NoGesture labeling have to changed the .eaf file to .csv for evaluation; F1-score, Precision, Recall, Accuracy etc.
for the transform the files use "python create_Csv.py"
*** code line 6-9 have to adjust

prediction.csv 는 2.Envisionhgdetector 실행 시에 자동으로 생성되기 때문에, 따로 생성할 필요가 없음.
prediction.csv 는 이미 Gesture, NoGesture 라벨링 처리됨.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

4.BIO labeling use two codes
    1. python bio_final.py
    2. python bio_pred.py
    for using have to change 4 code lines; Inputpath:5,70; Outputpath:6,71



++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

5.Evaluation
Use "python Eval_CM.py" to evaluate normaly. 
Use "python Eval_macro_weighted.py" to evaluate for special cases, like vides1 (Va.Si.Li-Lab), the videos too many NoGesture have. 라벨의 데이터수가 불균형하기 때문에, 결과값이 이상하게 측정될 가능성이 높다. 그렇기 때문에 일반적인 평가지표 뿐만 아니라, macro, weighted 값 까지 계산하는 것이 타당할 것 같다.
Use "python Eval_bio.py" to evaluate BIO schema
Use "python Eval_bio_weighted.py"

all three codes make also Confusiom Matrices
